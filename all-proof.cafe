--> true
open INV .
	op pmsi : -> PmsInfo .
	op s : -> Sys .
	red inv1(init,pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5)))) .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5)))) .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5))))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5))))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r2,r4) = none .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r2,r4) = none .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r2,r4) = none) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r2,r4) = none) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq r3 = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq (r3 = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9,r10,r11,r12),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = false .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true, use inv3 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = false .
	eq existPubCKexM(pmsi,nw(s)) = false .
	red inv3(s,pmsi) implies inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9,r10,r11,r12),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq existPriSKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	eq (pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi))) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq r3 = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9,r10,r11,r12),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = false .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true, use inv3 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPriCKexM(pmsi,nw(s)) = false .
	eq existPubCKexM(pmsi,nw(s)) = false .
	red inv3(s,pmsi) implies inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9,r10,r11,r12),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi)) .
	eq (r3 = intruder) = false .
	eq existPriSKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq (pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi))) = false .
	eq r3 = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq client(pmsi) = r3 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	eq (pubKeyEx(r1,r3) = getPmsPub(pmsKey(pmsi))) = false .
	eq (r3 = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (client(pmsi) = r3) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (client(pmsi) = r3) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkChello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkChello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkChello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkChello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkShello(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkShello(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkShello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkShello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq owner(r3) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq owner(r3) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPub(pmsKey(pmsi)) = r3) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq r1 = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPub(pmsKey(pmsi)) = r3) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq owner(r3) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq owner(r3) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq getPmsPub(pmsKey(pmsi)) = r3 .
	eq (owner(r3) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPub(pmsKey(pmsi)) = r3) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq server(pmsi) = intruder .
	eq (r1 = intruder) = false .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (getPmsPub(pmsKey(pmsi)) = r3) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (server(pmsi) = intruder) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (server(pmsi) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq server(pmsi) = intruder .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (pubKeyEx(r1,intruder) = getPmsPub(pmsKey(pmsi))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq (server(pmsi) = intruder) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	eq (server(pmsi) = intruder) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq owner(getPmsPub(pmsKey(pmsi))) = intruder .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = true .
	eq existPubCKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = true .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true, use inv2 as a lemma
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = true .
	eq existPriSKexM(pmsi,nw(s)) = false .
	eq existPubSKexM(pmsi,nw(s)) = false .
	red inv2(s,pmsi) implies inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,
    r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi)) .
	eq (client(pmsi) = intruder) = false .
	eq existPriCKexM(pmsi,nw(s)) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi))) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq server(pmsi) = r4 .
	eq (owner(getPmsPub(pmsKey(pmsi))) = intruder) = false .
	eq (pubKeyEx(r1,r4) = getPmsPub(pmsKey(pmsi))) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq (server(pmsi) = r4) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	eq (server(pmsi) = r4) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq client(pmsi) = intruder .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq (client(pmsi) = intruder) = false .
	red inv1(s,pmsi) implies inv1(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op s : -> Sys .
	red inv2(init,pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5)))) .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5))))) = false .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = false .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv2(s,pmsi) implies inv2(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv2(s,pmsi) implies inv2(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r2,r4) = none .
	red inv2(s,pmsi) implies inv2(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r2,r4) = none) = false .
	red inv2(s,pmsi) implies inv2(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	red inv2(s,pmsi) implies inv2(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = false .
	red inv2(s,pmsi) implies inv2(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,intruder,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,intruder,r7,r8,r9) \in nw(s)) = true .
	eq client(pmsi) = intruder .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,intruder,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,intruder,r7,r8,r9) \in nw(s)) = true .
	eq (client(pmsi) = intruder) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,intruder,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,intruder,r7,r8,r9) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,intruder,r11,r12) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq r3 = intruder .
	eq (scertM(r2,r4,intruder,r10) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq getPmsPri(pmsKey(pmsi)) = r1 .
	eq (r3 = intruder) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (getPmsPri(pmsKey(pmsi)) = r1) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	red inv2(s,pmsi) implies inv2(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	red inv2(s,pmsi) implies inv2(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv2(s,pmsi) implies inv2(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	red inv2(s,pmsi) implies inv2(fkChello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	red inv2(s,pmsi) implies inv2(fkChello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq getPmsPri(pmsKey(pmsi)) = priKey(r3) .
	eq client(pmsi) = intruder .
	red inv2(s,pmsi) implies inv2(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq getPmsPri(pmsKey(pmsi)) = priKey(r3) .
	eq (client(pmsi) = intruder) = false .
	red inv2(s,pmsi) implies inv2(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (getPmsPri(pmsKey(pmsi)) = priKey(r3)) = false .
	red inv2(s,pmsi) implies inv2(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv2(s,pmsi) implies inv2(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv2(s,pmsi) implies inv2(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv2(s,pmsi) implies inv2(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	red inv2(s,pmsi) implies inv2(fkShello(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	red inv2(s,pmsi) implies inv2(fkShello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	red inv2(s,pmsi) implies inv2(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	red inv2(s,pmsi) implies inv2(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	red inv2(s,pmsi) implies inv2(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	red inv2(s,pmsi) implies inv2(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	red inv2(s,pmsi) implies inv2(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	red inv2(s,pmsi) implies inv2(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	red inv2(s,pmsi) implies inv2(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	red inv2(s,pmsi) implies inv2(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	red inv2(s,pmsi) implies inv2(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	red inv2(s,pmsi) implies inv2(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	red inv2(s,pmsi) implies inv2(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	red inv2(s,pmsi) implies inv2(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	red inv2(s,pmsi) implies inv2(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	red inv2(s,pmsi) implies inv2(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op s : -> Sys .
	red inv3(init,pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r2,r10,r11) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = true .
	eq (chM(r2,r2,r3,r4,r5) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = true .
	eq (scertM(r1,r3,r2,r9) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r2,r2,r3,pubKeyEx(r12,r2)) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5)))) .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(
    pms(ss(s,r2,r3,r5)),r4,r7),hFin2(r2,r3,r4,r5,r6,r7,cs(ss(s,r2,r3,r5))))) = false .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r2,r3,r5)),r4,r7),r4,r7)) = false .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = true .
	eq (ch2M(r2,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r2,r8) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv3(s,pmsi) implies inv3(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv3(s,pmsi) implies inv3(chello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r2,r4) = none .
	red inv3(s,pmsi) implies inv3(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r2,r4) = none) = false .
	red inv3(s,pmsi) implies inv3(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	red inv3(s,pmsi) implies inv3(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r2,r4)) \in r5) = false .
	red inv3(s,pmsi) implies inv3(chello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r2,r4,r3,r7,r8,r9) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r2,r4,r3,r11,r12) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r2,r4,r3,r10) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),pmsi)
    .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	red inv3(s,pmsi) implies inv3(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkCert(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	red inv3(s,pmsi) implies inv3(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkCfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv3(s,pmsi) implies inv3(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkCfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkCfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	red inv3(s,pmsi) implies inv3(fkChello(s,r1,r2,r3,r4),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	red inv3(s,pmsi) implies inv3(fkChello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	red inv3(s,pmsi) implies inv3(fkCkeyex(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv3(s,pmsi) implies inv3(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkSfinish2a(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> PmsInfo .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinish2b(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv3(s,pmsi) implies inv3(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkSfinisha(s,r1,r2,r3),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PmsInfo .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv3(s,pmsi) implies inv3(fkSfinishb(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),
    pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	red inv3(s,pmsi) implies inv3(fkShello(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	red inv3(s,pmsi) implies inv3(fkShello2(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq r1 = intruder .
	red inv3(s,pmsi) implies inv3(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (r1 = intruder) = false .
	red inv3(s,pmsi) implies inv3(fkSkeyex(s,r1,r2,r3,r4,r5),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	red inv3(s,pmsi) implies inv3(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(scert(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,
    r9),r4,r6),hFin(r2,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),pubKeyEx(
    r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9),r4,r6),r4,r6)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = true .
	eq (shM(r3,r3,r2,r6,r7,r8) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in
    nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r10) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r2,r3,r11) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = true .
	red inv3(s,pmsi) implies inv3(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r7,r5,cs(ss(s,r2,r3,r5))) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(sfinish2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	red inv3(s,pmsi) implies inv3(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	red inv3(s,pmsi) implies inv3(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	red inv3(s,pmsi) implies inv3(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	red inv3(s,pmsi) implies inv3(shello(s,r1,r2,r3,r4,r5,r6,r7,r8),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	red inv3(s,pmsi) implies inv3(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	red inv3(s,pmsi) implies inv3(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	red inv3(s,pmsi) implies inv3(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	red inv3(s,pmsi) implies inv3(shello2(s,r1,r2,r3,r4,r5,r6,r7),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = true .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = true .
	eq (shM(intruder,intruder,r3,r7,r8,r9) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = true .
	eq (chM(r2,r3,intruder,r5,r6) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq r4 = intruder .
	eq (scertM(intruder,intruder,r3,cert(intruder,pubKey(intruder),sign(ca,intruder,
    pubKey(intruder)))) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (r4 = intruder) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close

--> true
open INV .
	op pmsi : -> PmsInfo .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	red inv3(s,pmsi) implies inv3(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),pmsi) .
close