--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r2 : -> Rand .
	op s : -> Sys .
	red inv4(init,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(chello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
		op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCert(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkChello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkChello(s,r1,r21,r3,r4),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkChello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkChello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCkeyex(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkCkeyex(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2a(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),pk2,
    ci,pk3))) = r3 .
	eq (sfM(intruder,r1,a,r3) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),pk2,
    ci,pk3))) = r3 .
	eq (sfM(intruder,r1,a,r3) \in nw(s)) = false .
	eq (sfM(r1,r1,a,r3) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv5 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),pk2,
    ci,pk3))) = r3 .
	eq (sfM(intruder,r1,a,r3) \in nw(s)) = false .
	eq (sfM(r1,r1,a,r3) \in nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),pk2,
    ci,pk3))) = r3) = false .
	eq (sfM(intruder,r1,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,
    pubKey(r1))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),pk2,
    ci,pk3))) = r3) = false .
	eq (sfM(intruder,r1,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,
    pubKey(r1))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq (b1 = intruder) = false .
	eq r1 = intruder .
	eq encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,css,r2,cs,i,cert(intruder,pubKey(intruder),
    sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3))) = r3 .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq (b1 = intruder) = false .
	eq r1 = intruder .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,css,r2,cs,i,cert(intruder,pubKey(
    intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3))) = r3) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,css,r2,cs,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq (b1 = intruder) = false .
	eq r1 = intruder .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,css,r2,cs,i,cert(intruder,pubKey(
    intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3))) = r3) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,css,r2,cs,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq (b1 = intruder) = false .
	eq (r1 = intruder) = false .
	eq (sfM(b1,r1,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,
    pubKey(r1))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq b = r1 .
	eq (b1 = intruder) = false .
	eq (r1 = intruder) = false .
	eq (sfM(b1,r1,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r1),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r1),r,r2),hFin(a,r1,r,css,r2,cs,i,cert(r1,pubKey(r1),sign(ca,r1,
    pubKey(r1))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq (b = r1) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq r21 = a .
	eq (b = r1) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (r21 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (r21 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinisha(s,r1,r21,r3),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq r5 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq r5 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq r5 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq r5 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = true .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	eq (sfM(r5,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,r21)),
    r11,ci,r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,
    pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq pubKey(r5) = r21 .
	eq (sign(ca,r5,r21) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,r21,sign(ca,r5,
    r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = true .
	eq (pubKey(r5) = r21) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq r3 = sign(ca,r5,pubKey(r5)) .
	eq (sign(ca,r5,pubKey(r5)) \in csign(nw(s))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq (r3 = sign(ca,r5,pubKey(r5))) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,r5) .
	eq existPriCKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,r5),nw(s)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,r5)) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (r5 = intruder) = false .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,r10,cert(r5,pubKey(r5),sign(
    ca,r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r8),hFin(a,r5,r6,r7,r8,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r6,r2),hFin(a,r5,r6,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,
    r5,pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq b1 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(intruder,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,
    pubKey(r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,r21,sign(ca,intruder,r21)),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq (pubKey(intruder) = r21) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq r3 = sign(ca,intruder,pubKey(intruder)) .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (r3 = sign(ca,intruder,pubKey(intruder))) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq r1 = pms(pk,k,a,intruder) .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (r1 = pms(pk,k,a,intruder)) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,r10,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r8),hFin(a,intruder,r6,r7,r8,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r6,r2),hFin(a,intruder,r6,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,r12)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),r11,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq r5 = intruder .
	eq (pk2 = r11) = false .
	eq (sfM(b1,intruder,a,encFin(prf-skey(prf-ms(pms(pk,k,a,intruder),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,intruder),r,r2),hFin(a,intruder,r,r7,r2,r9,i,cert(
    intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq b = r5 .
	eq (b1 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (sfM(b1,r5,a,encFin(prf-skey(prf-ms(pms(pk,k,a,r5),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,r5),r,r2),hFin(a,r5,r,r7,r2,r9,i,cert(r5,pubKey(r5),sign(ca,r5,pubKey(
    r5))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq r4 = a .
	eq (b = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq css = r7 .
	eq (r4 = a) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (cs = r9) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkShello(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkShello(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkShello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkShello2(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSkeyex(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(fkSkeyex(s,r1,r21,r3,r4,r5),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq r21 = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pk2,ci,r10)) .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pk2,ci,r10)) .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pk2,ci,r10))) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pk2,ci,r10))) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pms(r10,r9,r21,r3) = pms(pk,k,r21,r3) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq (pms(r10,r9,r21,r3) = pms(pk,k,r21,r3)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq (pms(r10,r9,r21,r3) = pms(pk,k,r21,r3)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq (encParams(priKey(r3),r4,r6,pk2) = ci) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq (encParams(priKey(r3),r4,r6,pk2) = ci) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq (pubKeyEx(r9,r3) = pk2) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq (pubKeyEx(r9,r3) = pk2) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq (encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq (encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq (i = r8) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,i,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq (i = r8) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,i,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq (r2 = r6) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r2),r4,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r2),hFin(r21,r3,r4,r5,r2,r7,i,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq r = r4 .
	eq (r2 = r6) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r2),r4,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r2),hFin(r21,r3,r4,r5,r2,r7,i,cert(r3,pubKey(r3),sign(
    ca,r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq (r = r4) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq pk3 = r10 .
	eq (r = r4) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pk2,ci,r10)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq (pk3 = r10) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq b = r3 .
	eq (pk3 = r10) = false .
	eq (sfM(b1,r3,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq (b = r3) = false .
	eq (sfM(b1,b,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,
    pubKey(b))),pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq a = r21 .
	eq (r21 = intruder) = false .
	eq (b = r3) = false .
	eq (sfM(b1,b,r21,encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,
    pubKey(b))),pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq (a = r21) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq css = r5 .
	eq (a = r21) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq (css = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq cs = r7 .
	eq (css = r5) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq (cs = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (a = intruder) = false .
	eq (cs = r7) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq a = intruder .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = true .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (sfM(b1,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),
    pk2,ci,pk3)))) \in nw(s)) = false .
	red inv4(s,a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv4(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,b1,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r2 : -> Rand .
	op s : -> Sys .
	red inv5(init,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq decParam2nd(r11,pubKey(r3)) = r6 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
		op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq decParam1st(r11,pubKey(r3)) = r4 .
	eq (decParam2nd(r11,pubKey(r3)) = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq decParam3rd(r11,pubKey(r3)) = r10 .
	eq (decParam1st(r11,pubKey(r3)) = r4) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq owner(r9) = r3 .
	eq (decParam3rd(r11,pubKey(r3)) = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq sign(r9) = sign(ca,r3,pubKey(r3)) .
	eq (owner(r9) = r3) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = true .
	eq (sign(r9) = sign(ca,r3,pubKey(r3))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decAsym?(r11,pubKey(r3)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = true .
	eq (shM(r1,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r1,r3,r21,r10,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = true .
	eq (chM(r21,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = true .
	eq (scertM(r1,r3,r21,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq (ckexM(r21,r21,r3,pubKeyEx(r12,r21)) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5)))) .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = true .
	eq (decFin(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = prf-sfin2(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),hFin2(r21,r3,r4,r5,r6,r7,cs(ss(s,r21,r3,r5))))) =
    false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq decSym?(r8,prf-skey(prf-ms(pms(ss(s,r21,r3,r5)),r4,r7),r4,r7)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r1,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = true .
	eq (ch2M(r21,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (sf2M(r1,r3,r21,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(cfinish2(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq ss(s,r1,r21,r4) = none .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = true .
	eq (ss(s,r1,r21,r4) = none) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = true .
	eq (r3 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r1,r21,r4)) \in r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(chello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq decParam2nd(r12,pubKey(r4)) = r7 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq decParam1st(r12,pubKey(r4)) = r5 .
	eq (r1 \in uk(s)) = false .
	eq (decParam2nd(r12,pubKey(r4)) = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq decParam3rd(r12,pubKey(r4)) = r11 .
	eq (decParam1st(r12,pubKey(r4)) = r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq owner(r10) = r4 .
	eq (decParam3rd(r12,pubKey(r4)) = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq sign(r10) = sign(ca,r4,pubKey(r4)) .
	eq (owner(r10) = r4) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = true .
	eq (sign(r10) = sign(ca,r4,pubKey(r4))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq decAsym?(r12,pubKey(r4)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = true .
	eq (shM(r21,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = true .
	eq (skexM(r21,r4,r3,r11,r12) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r21,r4,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(ckeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCert(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkChello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkChello(s,r1,r21,r3,r4),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkChello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkChello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCkeyex(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkCkeyex(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2a(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = true .
	eq existPriSKexM(r7,nw(s)) = false .
	eq existPubSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = true .
	eq existPubCKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq existPriCKexM(r7,nw(s)) = false .
	eq existPriSKexM(r7,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinish2b(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    = r3 .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) = r3) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) = r3) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) = r3) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinisha(s,r1,r21,r3),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
		op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
		eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
		eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
		eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = true .
	eq existPriSKexM(r1,nw(s)) = false .
	eq existPubSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv2 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv2(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPubSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq pubKey(intruder) = r21 .
	eq (sign(ca,intruder,r21) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq (pubKey(intruder) = r21) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = true .
	eq existPriCKexM(pms(pk,k,a,intruder),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,intruder),nw(s)) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq b = intruder .
	eq (sign(ca,intruder,pubKey(intruder)) \in csign(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true, use inv3 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq i = r10 .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	eq (b = intruder) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,r10,cert(b,r21,sign(ca,b,r21)),r11,ci,
    r12)))) \in nw(s)) = false .
	red inv3(s,r1) implies inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,
    pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq r2 = r8 .
	eq (i = r10) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r8),r6,r8),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r8),hFin(a,b,r6,r7,r8,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq r = r6 .
	eq (r2 = r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r6,r2),r6,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r6,r2),hFin(a,b,r6,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in
    cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq pk3 = r12 .
	eq (r = r6) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,r12))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq pk2 = r11 .
	eq (pk3 = r12) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),r11,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = true .
	eq (pk2 = r11) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq pubKey(b) = r21 .
	eq (sign(ca,b,r21) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,r21,sign(ca,b,r21)),pk2,ci,pk3))) \in cesfin(
    nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq r5 = b .
	eq (pubKey(b) = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq r4 = a .
	eq (r5 = b) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = true .
	eq (r4 = a) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq r3 = sign(ca,b,pubKey(b)) .
	eq (sign(ca,b,pubKey(b)) \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = true .
	eq (r3 = sign(ca,b,pubKey(b))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = true .
	eq existPubCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq r1 = pms(pk,k,a,b) .
	eq existPriCKexM(pms(pk,k,a,b),nw(s)) = false .
	eq existPriSKexM(pms(pk,k,a,b),nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq css = r7 .
	eq (r1 = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r7,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq cs = r9 .
	eq (css = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r9,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq encParams(priKey(intruder),r6,r8,r11) = ci .
	eq (cs = r9) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = true .
	eq (encParams(priKey(intruder),r6,r8,r11) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = true .
	eq existPubCKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPriCKexM(r1,nw(s)) = false .
	eq existPriSKexM(r1,nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> Rand .
	op r21 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSfinishb(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkShello(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkShello(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkShello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkShello2(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSkeyex(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(fkSkeyex(s,r1,r21,r3,r4,r5),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(scert(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq i = r8 .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq (i = r8) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq (i = r8) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq r2 = r6 .
	eq (i = r8) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq (r2 = r6) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq (r2 = r6) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r2),r4,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r2),hFin(r21,r3,r4,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq r = r4 .
	eq (r2 = r6) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r4,r2),r4,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r4,r2),hFin(r21,r3,r4,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pk2,ci,r10))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq (r = r4) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq (r = r4) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,r10))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq pk3 = r10 .
	eq (r = r4) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,r10))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq (pk3 = r10) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq (pk3 = r10) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = true .
	eq (pk3 = r10) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq encParams(priKey(r3),r4,r6,pk2) = ci .
	eq (skexM(r3,r3,r21,pk2,ci) \in nw(s)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq (encParams(priKey(r3),r4,r6,pk2) = ci) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq (encParams(priKey(r3),r4,r6,pk2) = ci) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = true .
	eq (encParams(priKey(r3),r4,r6,pk2) = ci) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq pubKeyEx(r9,r3) = pk2 .
	eq (skexM(r3,r3,r21,pk2,encParams(priKey(r3),r4,r6,pk2)) \in nw(s)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (pubKeyEx(r9,r3) = pk2) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (pubKeyEx(r9,r3) = pk2) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (pubKeyEx(r9,r3) = pk2) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq b = r3 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,r3),r4,r6),r4,r6)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,r3),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,r3),r,r2),hFin(r21,r3,r,r5,r2,r7,i,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),
    pk2,ci,pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (b = r3) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (b = r3) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (b = r3) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,r21,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,
    pubKey(r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = false .
	eq r21 = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq a = r21 .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,r21,b),r4,r6),r4,r6)) = false .
	eq (r21 = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,r21,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,r21,b),r,r2),hFin(r21,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (a = r21) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (a = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10)) .
	eq (a = r21) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(pk,k,a,b),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,r3,pubKey(
    r3))),pubKeyEx(r9,r3),ci,r10))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq pms(r10,r9,r21,r3) = pms(pk,k,a,b) .
	eq decSym?(r11,prf-ckey(prf-ms(pms(pk,k,a,b),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq (pms(r10,r9,r21,r3) = pms(pk,k,a,b)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq (pms(r10,r9,r21,r3) = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq css = r5 .
	eq (pms(r10,r9,r21,r3) = pms(pk,k,a,b)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,r5,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,pk3)))
    \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq (css = r5) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq (css = r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq cs = r7 .
	eq (css = r5) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,r7,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq (cs = r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq (cs = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = true .
	eq (cs = r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),ci) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10)) .
	eq (encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)) = ci) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = true .
	eq (decFin(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = prf-cfin(prf-ms(pms(r10,r9,r21,r3),r4,r6),hFin(r21,r3,r4,r5,r6,r7,r8,cert(r3,pubKey(r3),sign(ca,
    r3,pubKey(r3))),pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3)),r10))) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = true .
	eq decSym?(r11,prf-ckey(prf-ms(pms(r10,r9,r21,r3),r4,r6),r4,r6)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = true .
	eq (shM(r3,r3,r21,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = true .
	eq (skexM(r3,r3,r21,pubKeyEx(r9,r3),encParams(priKey(r3),r4,r6,pubKeyEx(r9,r3))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (chM(r1,r21,r3,r4,r5) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r21,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = true .
	eq (ckexM(r1,r21,r3,r10) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1,r21,r3,r11) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish(s,r1,r21,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r3,r3,r21,r7,r5,cs(ss(s,r21,r3,r5))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ch2M(r1,r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(sfinish2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (r3 \in ui(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = true .
	eq (chM(r4,r5,r6,r7,r8) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r21 \in r8) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello(s,r1,r21,r3,r4,r5,r6,r7,r8),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq ss(s,r3,r4,r6) = none .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = true .
	eq (ss(s,r3,r4,r6) = none) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (r1 \in ur(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = true .
	eq (ch2M(r21,r3,r4,r5,r6,r7) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (cs(ss(s,r3,r4,r6)) \in r7) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(shello2(s,r1,r21,r3,r4,r5,r6,r7),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = true .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = true .
	eq (r1 \in uk(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r4,r4,r3,r7,r8,r9) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = true .
	eq (chM(r21,r3,r4,r5,r6) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq a = intruder .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = true .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op cs : -> CipherSuite .
	op css : -> CipherSuites .
	op i : -> Sid .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op pk2 : -> PubKeyEx .
	op pk3 : -> PubKeyEx .
	op r : -> Rand .
	op r1 : -> PriKeyEx .
	op r2 : -> Rand .
	op r21 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (scertM(r4,r4,r3,cert(r4,pubKey(r4),sign(ca,r4,pubKey(r4)))) \in nw(s)) = false .
	eq (a = intruder) = false .
	eq (encFin(prf-skey(prf-ms(pms(pk,k,a,b),r,r2),r,r2),prf-sfin(prf-ms(pms(pk,k,a,b),r,r2),hFin(a,b,r,css,r2,cs,i,cert(b,pubKey(b),sign(ca,b,pubKey(b))),pk2,ci,
    pk3))) \in cesfin(nw(s))) = false .
	red inv5(s,a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) implies inv5(skeyex(s,r1,r21,r3,r4,r5,r6,r7,r8,r9),a,b,r,css,r2,cs,i,pk,ci,pk2,pk3,k) .
close

-- Maude> q
-- Bye.

-- real	5m6.891s
-- user	5m2.840s
-- sys	0m1.915s
-- duongtd-imac:tls12 duongtd$ 
